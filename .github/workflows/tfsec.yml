name: terraform-tfsec-check

on:  
  pull_request:
    branches:
      - main
      - develop
      - test
permissions:
  contents: read
  pull-requests: write
jobs:
  tfsec:
    name: Run tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Run tfsec
        uses: aquasecurity/tfsec-sarif-action@master
        with:
          sarif_file: tfsec.sarif
      
      - name: CustomCommenter
        run: |
          SARIF_REPORT=`cat tfsec.sarif`
          echo "SARIF_REPORT<<EOF" >> $GITHUB_ENV
          echo "$SARIF_REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          function jsonArrayToTable(){
          jq -r '(.[0] | ([keys[] | .] |(., map(length*"-")))), (.[] |([keys[] as $k | .[$k]])) | @tsv' column -t -s $'\t'
          }
          if [ "$(sed -n '/^{/p;q' tfsec.sarif)" ]
          then
               echo ""
          else
               echo "{\n$(cat tfsec.sarif)" > tfsec.sarif
          fi

          export SARIF_REPORT=`cat tfsec.sarif`
          echo $SARIF_REPORT | jq ' .runs[].results[] | { message: .message.text, file: "https://github.com/manish-partey/21Sept2022tfsec/blob/feature/\(.locations[].physicalLocation.artifactLocation.uri)#L\(.locations[].physicalLocation.region.startLine)-L\(.locations[].physicalLocation.region.endLine)", line: .locations[].physicalLocation.region } ' >> tfsec-result.json

          SARIF_REPORT_NEW=`cat tfsec-result.json`
          echo SARIF_REPORT_NEW | jsonArrayToTable
          echo "SARIF_REPORT_NEW<<EOF" >> $GITHUB_ENV
          echo "$SARIF_REPORT_NEW" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions/github-script@0.9.0
        env:
          REPORT: "```${{ env.SARIF_REPORT_NEW }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.REPORT
            }) 